{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introducci\u00f3n a Blockchain y Criptomonedas \u00b6 Este curso de 4 semanas est\u00e1 orientado a estudiantes de ingenier\u00eda y programadores en general que quieran aprender conceptos b\u00e1sicos sobre blockchain y criptomonedas, con un enfoque m\u00e1s t\u00e9cnico que econ\u00f3mico. Requisitos del curso \u00b6 Firefox, Chrome o Brave como navegador. Node.js instalado. Conocimientos b\u00e1sicos de JavaScript. Durante el curso instalaremos Truffle, Ganache y Webpack.","title":"Inicio"},{"location":"#introduccion-a-blockchain-y-criptomonedas","text":"Este curso de 4 semanas est\u00e1 orientado a estudiantes de ingenier\u00eda y programadores en general que quieran aprender conceptos b\u00e1sicos sobre blockchain y criptomonedas, con un enfoque m\u00e1s t\u00e9cnico que econ\u00f3mico.","title":"Introducci\u00f3n a Blockchain y Criptomonedas"},{"location":"#requisitos-del-curso","text":"Firefox, Chrome o Brave como navegador. Node.js instalado. Conocimientos b\u00e1sicos de JavaScript. Durante el curso instalaremos Truffle, Ganache y Webpack.","title":"Requisitos del curso"},{"location":"exercises/part1/collision/","text":"Causando una colisi\u00f3n \u00b6 Cuando aplicamos una funci\u00f3n hash a dos datos distintos y obtenemos el mismo hash, decimos que ha ocurrido una colisi\u00f3n . Queremos que el algoritmo de hash que usamos sea resistente a colisiones, es decir, que sea casi imposible que estas ocurran. Algunas peque\u00f1as colisiones \u00b6 Ejercicio Escribe la funci\u00f3n miniCollision(str1, str2, ammount) que recibir\u00e1 dos cadenas cualquiera y una cantidad de ceros. Para la cadena str1 calcula su hash y despliegalo. El objetivo es encontrar un hash para str2 cuyos primeros d\u00edgitos sean iguales a los del primer hash que calculamos, ammount nos indica cu\u00e1ntos d\u00edgitos iguales queremos. Para lograrlo, se deber\u00e1n agregar distintos nonces a str2 hasta encontrar uno que nos genere el hash deseado. Al encontrarlo despliega el hash y la cantidad de intentos que se necesitaron. Experimenta Aplica la funci\u00f3n a la misma pareja de cadenas, pero con distintas cantidades de d\u00edgitos. \u00bfCu\u00e1nto aumenta la cantidad de intentos necesarios por cada d\u00edgito adicional que queremos que coincida? Si este patr\u00f3n se mantiene, \u00bfcu\u00e1ntos intentos se necesitar\u00edan para que todos los digitos coincidan?","title":"Causando una colisi\u00f3n"},{"location":"exercises/part1/collision/#causando-una-colision","text":"Cuando aplicamos una funci\u00f3n hash a dos datos distintos y obtenemos el mismo hash, decimos que ha ocurrido una colisi\u00f3n . Queremos que el algoritmo de hash que usamos sea resistente a colisiones, es decir, que sea casi imposible que estas ocurran.","title":"Causando una colisi\u00f3n"},{"location":"exercises/part1/collision/#algunas-pequenas-colisiones","text":"Ejercicio Escribe la funci\u00f3n miniCollision(str1, str2, ammount) que recibir\u00e1 dos cadenas cualquiera y una cantidad de ceros. Para la cadena str1 calcula su hash y despliegalo. El objetivo es encontrar un hash para str2 cuyos primeros d\u00edgitos sean iguales a los del primer hash que calculamos, ammount nos indica cu\u00e1ntos d\u00edgitos iguales queremos. Para lograrlo, se deber\u00e1n agregar distintos nonces a str2 hasta encontrar uno que nos genere el hash deseado. Al encontrarlo despliega el hash y la cantidad de intentos que se necesitaron. Experimenta Aplica la funci\u00f3n a la misma pareja de cadenas, pero con distintas cantidades de d\u00edgitos. \u00bfCu\u00e1nto aumenta la cantidad de intentos necesarios por cada d\u00edgito adicional que queremos que coincida? Si este patr\u00f3n se mantiene, \u00bfcu\u00e1ntos intentos se necesitar\u00edan para que todos los digitos coincidan?","title":"Algunas peque\u00f1as colisiones"},{"location":"exercises/part1/faucet/","text":"Uso de faucet \u00b6 Normalmente las monedas se adquieren a trav\u00e9s de miner\u00eda y compr\u00e1ndolas con efectivo. Sin embargo, como usaremos la testnet Goerli, podemos obtener monedas de forma totalmente gratuita a trav\u00e9s de un faucet . Los faucets nos regalan una peque\u00f1a cantidad de monedas, GoerliETH en nuestro caso. La mayor\u00eda tienen alguna restricci\u00f3n de tiempo para que un usuario malintencionado no pueda llevarse todas las monedas gratuitas. Hay pocos faucets disponibles Recientemente algunas otras testnet como Ropsten y Rinkeby dejaron de funcionar, por la tanto la popularidad de Goerli aument\u00f3. Actualmente son pocas las faucets que siguen funcionando debido a que muchas se han quedado sin reservas de ETH. Obteniendo mi direcci\u00f3n \u00b6 Al hacer click sobre el \u00edcono de Metamask se deplegar\u00e1 una ventana. En la parte de arriba de esta aparece por defecto el nombre Account 1 y abajo el inicio de un n\u00famero hexadecimal, el cu\u00e1l es nuestra direcci\u00f3n, en este caso 0x752... . Para llevar un mejor control podemos hacer click sobre los tres puntos y luego sobre Account details para modificar el nombre de esta cuenta, la direcci\u00f3n no puede ser modificada pero m\u00e1s adelante crearemos direcciones adicionales. Datos de mi primera cuenta Si nos colocamos sobre el nombre de la cuenta, aparecer\u00e1 un mensaje indicando que podemos hacer click para copiar la direcci\u00f3n, esto nos ser\u00e1 de gran utilidad en todas las operaciones siguientes. Click para copiar la direcci\u00f3n Goerli Faucet \u00b6 Goerli Faucet nos permite pedir hasta 0.25 ETH cada d\u00eda. Debido a la alta popularidad que Goerli ha tenido recientemente, este faucet requiere que creemos y nos identifiquemos con una cuenta de Alchemy. Al crearla, debemos elegir la opci\u00f3n gratuita. Se requiere una cuenta de Alchemy Una vez te hayas registrado e ingresado podr\u00e1s colocar la direcci\u00f3n que Metamask te da y pedir tu ETH gratuito. Despu\u00e9s de ingresar ya podemos pedir Goerli PoW Faucet \u00b6 Goerli PoW Faucet es un faucet que requiere que realicemos miner\u00eda a cambio de entregarnos ETH. Debemos colocar nuestra direcci\u00f3n para recibir las monedas y luego hacer click en el bot\u00f3n de Start Mining. Previo a iniciar miner\u00eda Al hacerlo nuestro navegador web empezar\u00e1 a calcular hashes, es decir, a realizar miner\u00eda. Debemos esperar algunos minutos mientras se realiza el trabajo suficiente para obtener el pago m\u00ednimo. Se requiere un m\u00ednimo de 0.05 ETH para poder retirar Despu\u00e9s de la espera, el bot\u00f3n de abajo cambiar\u00e1 y nos indicar\u00e1 que ya podemos cobrar lo obtenido. Al alcanzar el m\u00ednimo, ya podremos retirar Evita este faucet si est\u00e1s trabajando en una laptop \u00fanicamente con bater\u00eda, o si tu computadora no tiene muy buen enfriamiento. Realizar miner\u00eda hace que la computadora realice bastante trabajo.","title":"Uso de faucet"},{"location":"exercises/part1/faucet/#uso-de-faucet","text":"Normalmente las monedas se adquieren a trav\u00e9s de miner\u00eda y compr\u00e1ndolas con efectivo. Sin embargo, como usaremos la testnet Goerli, podemos obtener monedas de forma totalmente gratuita a trav\u00e9s de un faucet . Los faucets nos regalan una peque\u00f1a cantidad de monedas, GoerliETH en nuestro caso. La mayor\u00eda tienen alguna restricci\u00f3n de tiempo para que un usuario malintencionado no pueda llevarse todas las monedas gratuitas. Hay pocos faucets disponibles Recientemente algunas otras testnet como Ropsten y Rinkeby dejaron de funcionar, por la tanto la popularidad de Goerli aument\u00f3. Actualmente son pocas las faucets que siguen funcionando debido a que muchas se han quedado sin reservas de ETH.","title":"Uso de faucet"},{"location":"exercises/part1/faucet/#obteniendo-mi-direccion","text":"Al hacer click sobre el \u00edcono de Metamask se deplegar\u00e1 una ventana. En la parte de arriba de esta aparece por defecto el nombre Account 1 y abajo el inicio de un n\u00famero hexadecimal, el cu\u00e1l es nuestra direcci\u00f3n, en este caso 0x752... . Para llevar un mejor control podemos hacer click sobre los tres puntos y luego sobre Account details para modificar el nombre de esta cuenta, la direcci\u00f3n no puede ser modificada pero m\u00e1s adelante crearemos direcciones adicionales. Datos de mi primera cuenta Si nos colocamos sobre el nombre de la cuenta, aparecer\u00e1 un mensaje indicando que podemos hacer click para copiar la direcci\u00f3n, esto nos ser\u00e1 de gran utilidad en todas las operaciones siguientes. Click para copiar la direcci\u00f3n","title":"Obteniendo mi direcci\u00f3n"},{"location":"exercises/part1/faucet/#goerli-faucet","text":"Goerli Faucet nos permite pedir hasta 0.25 ETH cada d\u00eda. Debido a la alta popularidad que Goerli ha tenido recientemente, este faucet requiere que creemos y nos identifiquemos con una cuenta de Alchemy. Al crearla, debemos elegir la opci\u00f3n gratuita. Se requiere una cuenta de Alchemy Una vez te hayas registrado e ingresado podr\u00e1s colocar la direcci\u00f3n que Metamask te da y pedir tu ETH gratuito. Despu\u00e9s de ingresar ya podemos pedir","title":"Goerli Faucet"},{"location":"exercises/part1/faucet/#goerli-pow-faucet","text":"Goerli PoW Faucet es un faucet que requiere que realicemos miner\u00eda a cambio de entregarnos ETH. Debemos colocar nuestra direcci\u00f3n para recibir las monedas y luego hacer click en el bot\u00f3n de Start Mining. Previo a iniciar miner\u00eda Al hacerlo nuestro navegador web empezar\u00e1 a calcular hashes, es decir, a realizar miner\u00eda. Debemos esperar algunos minutos mientras se realiza el trabajo suficiente para obtener el pago m\u00ednimo. Se requiere un m\u00ednimo de 0.05 ETH para poder retirar Despu\u00e9s de la espera, el bot\u00f3n de abajo cambiar\u00e1 y nos indicar\u00e1 que ya podemos cobrar lo obtenido. Al alcanzar el m\u00ednimo, ya podremos retirar Evita este faucet si est\u00e1s trabajando en una laptop \u00fanicamente con bater\u00eda, o si tu computadora no tiene muy buen enfriamiento. Realizar miner\u00eda hace que la computadora realice bastante trabajo.","title":"Goerli PoW Faucet"},{"location":"exercises/part1/hash/","text":"C\u00e1lculo de un hash \u00b6 La operaci\u00f3n m\u00e1s comunmente realizada en blockchain es calcular un hash . Esta se usa al relacionar un bloque con otro, previo a firmar una transacci\u00f3n, al realizar miner\u00eda, entre otros momentos. Para realizar el c\u00e1lculo usaremos la libreria crypto de Node. Si no la tienes instalada, utiliza el siguiente comando para instalarla en tu carpeta actual. npm install crypto Nuestro primer hash \u00b6 Para nuestro primer hash utilizaremos el siguiente c\u00f3digo. const crypto = require('crypto'); const content = \"Mi string a hashear\"; const stringBuffer = Buffer.from(content); const hashSum = crypto.createHash('sha256').update(stringBuffer); const hex = hashSum.digest('hex'); console.log(hex); La funci\u00f3n createHash() requiere un tipo de hash, usaremos sha256 el cu\u00e1l es usado en la mayor\u00eda de blockchains. Luego utilizamos update() para indicar a qui\u00e9n le aplicaremos la funci\u00f3n hash, el argumento que enviemos debe ser un buffer . Finalmente digest() nos permite obtener el hash en el formato deseado, en este caso como hexadecimal. Aplicando la funci\u00f3n hash a un archivo \u00b6 Ejercicio Modifica el ejemplo anterior para aplicar la funci\u00f3n hash a un archivo. Sugerencias La librer\u00eda fs nos permite acceder a archivos. const fs = require('fs'); La funci\u00f3n readFileSync() es la forma m\u00e1s sencilla de leer un archivo y obtener un buffer. const fileBuffer = fs.readFileSync(filename); Experimenta Si aplicas la funci\u00f3n varias veces al mismo archivo, siempre obtendr\u00e1s el mismo resultado. Compru\u00e9balo. Experimenta Aplica la funci\u00f3n hash a un archivo y anota el resultado. Haz una peque\u00f1a modificaci\u00f3n al archivo (cambia un caracter o un pixel por ejemplo) y vuelve a aplicar el hash. \u00bfQu\u00e9 le sucede a nuestro hash al hacer un peque\u00f1o cambio en el archivo? Agregando un nonce al archivo le\u00eddo \u00b6 Un nonce es un valor cualquiera que se concatena a un mensaje, transacci\u00f3n, etc. con el objetivo de obtener un hash distinto. Ejercicio Modifica el c\u00f3digo anterior para convertirlo en la funci\u00f3n hashWithNonce(filename, nonce) . filename es un string que representa el nombre del archivo y nonce es un n\u00famero entero cualquiera. Sugerencias La funci\u00f3n Buffer.from() crea un buffer a partir de alg\u00fan string dado. const stringBuffer = Buffer.from(someString); La funci\u00f3n Buffer.concat() recibe un arreglo que contiene varios buffers y los concatena. const newBuffer = Buffer.concat([fileBuffer, stringBuffer]);","title":"C\u00e1lculo de un hash"},{"location":"exercises/part1/hash/#calculo-de-un-hash","text":"La operaci\u00f3n m\u00e1s comunmente realizada en blockchain es calcular un hash . Esta se usa al relacionar un bloque con otro, previo a firmar una transacci\u00f3n, al realizar miner\u00eda, entre otros momentos. Para realizar el c\u00e1lculo usaremos la libreria crypto de Node. Si no la tienes instalada, utiliza el siguiente comando para instalarla en tu carpeta actual. npm install crypto","title":"C\u00e1lculo de un hash"},{"location":"exercises/part1/hash/#nuestro-primer-hash","text":"Para nuestro primer hash utilizaremos el siguiente c\u00f3digo. const crypto = require('crypto'); const content = \"Mi string a hashear\"; const stringBuffer = Buffer.from(content); const hashSum = crypto.createHash('sha256').update(stringBuffer); const hex = hashSum.digest('hex'); console.log(hex); La funci\u00f3n createHash() requiere un tipo de hash, usaremos sha256 el cu\u00e1l es usado en la mayor\u00eda de blockchains. Luego utilizamos update() para indicar a qui\u00e9n le aplicaremos la funci\u00f3n hash, el argumento que enviemos debe ser un buffer . Finalmente digest() nos permite obtener el hash en el formato deseado, en este caso como hexadecimal.","title":"Nuestro primer hash"},{"location":"exercises/part1/hash/#aplicando-la-funcion-hash-a-un-archivo","text":"Ejercicio Modifica el ejemplo anterior para aplicar la funci\u00f3n hash a un archivo. Sugerencias La librer\u00eda fs nos permite acceder a archivos. const fs = require('fs'); La funci\u00f3n readFileSync() es la forma m\u00e1s sencilla de leer un archivo y obtener un buffer. const fileBuffer = fs.readFileSync(filename); Experimenta Si aplicas la funci\u00f3n varias veces al mismo archivo, siempre obtendr\u00e1s el mismo resultado. Compru\u00e9balo. Experimenta Aplica la funci\u00f3n hash a un archivo y anota el resultado. Haz una peque\u00f1a modificaci\u00f3n al archivo (cambia un caracter o un pixel por ejemplo) y vuelve a aplicar el hash. \u00bfQu\u00e9 le sucede a nuestro hash al hacer un peque\u00f1o cambio en el archivo?","title":"Aplicando la funci\u00f3n hash a un archivo"},{"location":"exercises/part1/hash/#agregando-un-nonce-al-archivo-leido","text":"Un nonce es un valor cualquiera que se concatena a un mensaje, transacci\u00f3n, etc. con el objetivo de obtener un hash distinto. Ejercicio Modifica el c\u00f3digo anterior para convertirlo en la funci\u00f3n hashWithNonce(filename, nonce) . filename es un string que representa el nombre del archivo y nonce es un n\u00famero entero cualquiera. Sugerencias La funci\u00f3n Buffer.from() crea un buffer a partir de alg\u00fan string dado. const stringBuffer = Buffer.from(someString); La funci\u00f3n Buffer.concat() recibe un arreglo que contiene varios buffers y los concatena. const newBuffer = Buffer.concat([fileBuffer, stringBuffer]);","title":"Agregando un nonce al archivo le\u00eddo"},{"location":"exercises/part1/nonce/","text":"Encontrando un nonce \u00b6 Cuando realizamos un cambio a un archivo o string, por m\u00e1s peque\u00f1o que sea, el hash resultante cambiar\u00e1 por completo. Al realizar miner\u00eda se busca obtener un hash en espec\u00edfico, que comience con una cantidad de ceros dada. Para lograr esto, los mineros prueban una gran cantidad de nonces distintos hasta hallar el hash deseado. Buscando un cero en el hash \u00b6 Ejercicio Escribe la funci\u00f3n findOneZero(str) . str es una cadena cualquiera a la cu\u00e1l dentro de la funci\u00f3n se le agregar\u00e1 un nonce y se le calcular\u00e1 su hash sha256. La funci\u00f3n probar\u00e1 nonces distintos hasta que encuentre un hash que comienza con cero, al hacerlo desplegar\u00e1 la cantidad de intentos realizados y el hash obtenido. Sugerencias El nonce puede ser cualquier valor e incluso podr\u00eda elegirse al azar, sin embargo puede ser m\u00e1s eficiente solo usar un n\u00famero correlativo ya que haremos muchos intentos. Experimenta Aplica la funci\u00f3n a distintas cadenas. \u00bfCu\u00e1l es el promedio de intentos antes de encontrar el hash que buscamos? Ajustando la cantidad de ceros \u00b6 En la mayor\u00eda de blockchains es posible ajustar la dificultad seg\u00fan la cantidad de mineros, esto quiere decir cambiar la cantidad de ceros que buscamos al inicio del hash. Ejercicio Bas\u00e1ndote en el ejercicio anterior, escribe la funci\u00f3n findManyZeroes(str, ammount) . str es una cadena cualquiera a la cu\u00e1l le agregaremos un nonce y calcularemos su hash sha256. El objetivo es encontrar al inicio del hash la cantidad de ceros que ammount nos indica. Al encontrar la cantidad de ceros deseada, nuestra funci\u00f3n debe desplegar la cantidad de intentos realizados y el hash obtenido. Experimenta Aplica la funci\u00f3n a la misma cadena, pero cada vez busca una mayor cantidad de ceros. Repite el proceso para varias cadenas, cada una con distintas cantidades de ceros. \u00bfQue tanto crece la cantidad de intentos con cada cero adicional que buscamos?","title":"Encontrando un nonce"},{"location":"exercises/part1/nonce/#encontrando-un-nonce","text":"Cuando realizamos un cambio a un archivo o string, por m\u00e1s peque\u00f1o que sea, el hash resultante cambiar\u00e1 por completo. Al realizar miner\u00eda se busca obtener un hash en espec\u00edfico, que comience con una cantidad de ceros dada. Para lograr esto, los mineros prueban una gran cantidad de nonces distintos hasta hallar el hash deseado.","title":"Encontrando un nonce"},{"location":"exercises/part1/nonce/#buscando-un-cero-en-el-hash","text":"Ejercicio Escribe la funci\u00f3n findOneZero(str) . str es una cadena cualquiera a la cu\u00e1l dentro de la funci\u00f3n se le agregar\u00e1 un nonce y se le calcular\u00e1 su hash sha256. La funci\u00f3n probar\u00e1 nonces distintos hasta que encuentre un hash que comienza con cero, al hacerlo desplegar\u00e1 la cantidad de intentos realizados y el hash obtenido. Sugerencias El nonce puede ser cualquier valor e incluso podr\u00eda elegirse al azar, sin embargo puede ser m\u00e1s eficiente solo usar un n\u00famero correlativo ya que haremos muchos intentos. Experimenta Aplica la funci\u00f3n a distintas cadenas. \u00bfCu\u00e1l es el promedio de intentos antes de encontrar el hash que buscamos?","title":"Buscando un cero en el hash"},{"location":"exercises/part1/nonce/#ajustando-la-cantidad-de-ceros","text":"En la mayor\u00eda de blockchains es posible ajustar la dificultad seg\u00fan la cantidad de mineros, esto quiere decir cambiar la cantidad de ceros que buscamos al inicio del hash. Ejercicio Bas\u00e1ndote en el ejercicio anterior, escribe la funci\u00f3n findManyZeroes(str, ammount) . str es una cadena cualquiera a la cu\u00e1l le agregaremos un nonce y calcularemos su hash sha256. El objetivo es encontrar al inicio del hash la cantidad de ceros que ammount nos indica. Al encontrar la cantidad de ceros deseada, nuestra funci\u00f3n debe desplegar la cantidad de intentos realizados y el hash obtenido. Experimenta Aplica la funci\u00f3n a la misma cadena, pero cada vez busca una mayor cantidad de ceros. Repite el proceso para varias cadenas, cada una con distintas cantidades de ceros. \u00bfQue tanto crece la cantidad de intentos con cada cero adicional que buscamos?","title":"Ajustando la cantidad de ceros"},{"location":"exercises/part1/wallet/","text":"Instalando una billetera \u00b6 Una billetera es un programa, aplicaci\u00f3n, o extensi\u00f3n del navegador que nos permite acceder a nuestras criptomonedas y realizar transacciones. Durante el resto del curso utilizaremos una billetera llamada Metamask , la cu\u00e1l se instala como una extensi\u00f3n en nuestro navegador Firefox, Chrome, o Brave. Utilizaremos Ethereum en la testnet Goerli . Ethereum es un blockchain (con una moneda llamada Ether (ETH) ) que nos permite programar y utilizar contratos inteligentes. La testnet Goerli nos permitir\u00e1 realizar pruebas sin tener que gastar nada de dinero. Usar Goerli es gratis Para el curso no necesitaremos comprar nada de ETH real. Usaremos la testnet Goerli en la cu\u00e1l podremos obtener ETH de forma gratuita. Instalaci\u00f3n de Metamask \u00b6 Ingresa a la p\u00e1gina oficial de descarga de Metamask , elige tu navegador, y sigue las instrucciones para instalarla. Metamask funciona en varias plataformas Metamask es una extensi\u00f3n para el navegador, entonces durante el proceso de instalaci\u00f3n ser\u00e1s redirigido a la tienda de Firefox, Chrome, o Brave respectivamente. Revisa bien el sitio de instalaci\u00f3n Existen muchas p\u00e1ginas que ofrecen billeteras falsas, o que buscan imitar la de una billetera real. Asegurate de instalar desde una p\u00e1gina confiable En Firefox los autores de la extensi\u00f3n son danfinlay y kumavis . En Chrome y Brave el autor de la extensi\u00f3n es https://metamask.io . Inicializando nuestra billetera \u00b6 Tras instalar Metamask, podemos hacer click en su \u00edcono y se abrir\u00e1 una p\u00e1gina para inicializar nuestra billetera. Cuando llegues a la secci\u00f3n New to Metamask? elige la opci\u00f3n Create a wallet . No reutilices tu frase semilla Se recomienda fuertemente crear una billetera nueva para el curso, y no reutilizar alguna otra que ya tengas para uso personal, en especial si esta ya tiene criptomonedas. Metamask pedir\u00e1 que creemos una contrase\u00f1a, la cu\u00e1l es solo para uso local. A continuaci\u00f3n nos mostrar\u00e1 un video y algunos consejos de seguridad sobre como proteger nuestra frase semilla . Pon atenci\u00f3n a estos consejos antes de continuar. La pantalla siguiente nos mostrar\u00e1 nuestra frase, que debemos guardar de forma segura. Nunca compartas tu frase semilla Si alguien llega a tener acceso a nuestra frase semilla, tendr\u00e1 acceso a todo lo que tengamos guardado en esa billetera. No compartas esa informaci\u00f3n con nadie. Guarda tu frase semilla solamente en papel u otro medio no digital, y en un lugar seguro. La siguiente pantalla consiste en ingresar nuestra frase, para comprobar que la anotamos correctamente. Esto es necesario porque si perdemos la frase, perdemos el contenido de la billetera de forma permanente. Al pasar esta pantalla, Metamask nos indicar\u00e1 que completamos el proceso, ahora ya podemos usar nuestra billetera. Utilizando la testnet Goerli \u00b6 Al hacer click en el \u00edcono de Metamask se desplegar\u00e1 una peque\u00f1a ventana flotante que muestra cu\u00e1nto ETH tenemos disponible. Billetera Metamask En la parte de arriba hacemos click en Show/hide test networks lo cu\u00e1l nos llevar\u00e1 hacia el men\u00fa de configuraciones donde podemos habilitar esta funcionalidad. Show/hide test networks Habilitar funcionalidad aqu\u00ed Tras habilitarla, podemos elegir Goerli Test Network en el men\u00fa desplegable que Metamask tiene arriba. Luego de hacerlo notaremos que el valor mostrado cambi\u00f3 de 0 ETH a 0 GoerliETH . GoerliETH","title":"Instalaci\u00f3n de billetera"},{"location":"exercises/part1/wallet/#instalando-una-billetera","text":"Una billetera es un programa, aplicaci\u00f3n, o extensi\u00f3n del navegador que nos permite acceder a nuestras criptomonedas y realizar transacciones. Durante el resto del curso utilizaremos una billetera llamada Metamask , la cu\u00e1l se instala como una extensi\u00f3n en nuestro navegador Firefox, Chrome, o Brave. Utilizaremos Ethereum en la testnet Goerli . Ethereum es un blockchain (con una moneda llamada Ether (ETH) ) que nos permite programar y utilizar contratos inteligentes. La testnet Goerli nos permitir\u00e1 realizar pruebas sin tener que gastar nada de dinero. Usar Goerli es gratis Para el curso no necesitaremos comprar nada de ETH real. Usaremos la testnet Goerli en la cu\u00e1l podremos obtener ETH de forma gratuita.","title":"Instalando una billetera"},{"location":"exercises/part1/wallet/#instalacion-de-metamask","text":"Ingresa a la p\u00e1gina oficial de descarga de Metamask , elige tu navegador, y sigue las instrucciones para instalarla. Metamask funciona en varias plataformas Metamask es una extensi\u00f3n para el navegador, entonces durante el proceso de instalaci\u00f3n ser\u00e1s redirigido a la tienda de Firefox, Chrome, o Brave respectivamente. Revisa bien el sitio de instalaci\u00f3n Existen muchas p\u00e1ginas que ofrecen billeteras falsas, o que buscan imitar la de una billetera real. Asegurate de instalar desde una p\u00e1gina confiable En Firefox los autores de la extensi\u00f3n son danfinlay y kumavis . En Chrome y Brave el autor de la extensi\u00f3n es https://metamask.io .","title":"Instalaci\u00f3n de Metamask"},{"location":"exercises/part1/wallet/#inicializando-nuestra-billetera","text":"Tras instalar Metamask, podemos hacer click en su \u00edcono y se abrir\u00e1 una p\u00e1gina para inicializar nuestra billetera. Cuando llegues a la secci\u00f3n New to Metamask? elige la opci\u00f3n Create a wallet . No reutilices tu frase semilla Se recomienda fuertemente crear una billetera nueva para el curso, y no reutilizar alguna otra que ya tengas para uso personal, en especial si esta ya tiene criptomonedas. Metamask pedir\u00e1 que creemos una contrase\u00f1a, la cu\u00e1l es solo para uso local. A continuaci\u00f3n nos mostrar\u00e1 un video y algunos consejos de seguridad sobre como proteger nuestra frase semilla . Pon atenci\u00f3n a estos consejos antes de continuar. La pantalla siguiente nos mostrar\u00e1 nuestra frase, que debemos guardar de forma segura. Nunca compartas tu frase semilla Si alguien llega a tener acceso a nuestra frase semilla, tendr\u00e1 acceso a todo lo que tengamos guardado en esa billetera. No compartas esa informaci\u00f3n con nadie. Guarda tu frase semilla solamente en papel u otro medio no digital, y en un lugar seguro. La siguiente pantalla consiste en ingresar nuestra frase, para comprobar que la anotamos correctamente. Esto es necesario porque si perdemos la frase, perdemos el contenido de la billetera de forma permanente. Al pasar esta pantalla, Metamask nos indicar\u00e1 que completamos el proceso, ahora ya podemos usar nuestra billetera.","title":"Inicializando nuestra billetera"},{"location":"exercises/part1/wallet/#utilizando-la-testnet-goerli","text":"Al hacer click en el \u00edcono de Metamask se desplegar\u00e1 una peque\u00f1a ventana flotante que muestra cu\u00e1nto ETH tenemos disponible. Billetera Metamask En la parte de arriba hacemos click en Show/hide test networks lo cu\u00e1l nos llevar\u00e1 hacia el men\u00fa de configuraciones donde podemos habilitar esta funcionalidad. Show/hide test networks Habilitar funcionalidad aqu\u00ed Tras habilitarla, podemos elegir Goerli Test Network en el men\u00fa desplegable que Metamask tiene arriba. Luego de hacerlo notaremos que el valor mostrado cambi\u00f3 de 0 ETH a 0 GoerliETH . GoerliETH","title":"Utilizando la testnet Goerli"},{"location":"exercises/part2/calls/","text":"","title":"Identificando transacciones"},{"location":"exercises/part2/explorer/","text":"Explorando el blockchain \u00b6","title":"Explorando el blockchain"},{"location":"exercises/part2/explorer/#explorando-el-blockchain","text":"","title":"Explorando el blockchain"},{"location":"exercises/part2/signing/","text":"Firmando un mensaje \u00b6","title":"Firmando un mensaje"},{"location":"exercises/part2/signing/#firmando-un-mensaje","text":"","title":"Firmando un mensaje"},{"location":"exercises/part2/transaction/","text":"Realizando una tranferencia \u00b6 La operaci\u00f3n m\u00e1s b\u00e1sica que podemos realizar con nuestras monedas es una transferencia. Nuestra billetera nos permitir\u00e1 acceder a nuestras monedas, llevar control de m\u00faltiples cuentas, realizar transferencias, y autorizar transacciones. Creando direcciones adicionales \u00b6 Para crear una nueva direcci\u00f3n abrimos la ventana de Metamask y luego hacemos click en el \u00edcono circular que hay en la esquina superior derecha. Al hacerla se desplegar\u00e1 un men\u00fa donde podemos seleccionar Create account . Podemos colocarle un nombre a esta nueva cuenta, o dejar el nombre por defecto. Creando una nueva cuenta Despu\u00e9s de crearla, al volver a hacer click en el \u00edcono ahora las veremos las distintas cuentas y podremos elegir la que querramos usar. Listado con las cuentas creadas Realizando una transferencia entre cuentas \u00b6 Selecciona la cuenta que creaste en el inciso anterior y anota su direcci\u00f3n. Es seguro compartir tu direcci\u00f3n Tu direcci\u00f3n puedes copiarla, anotarla, e incluso compartirla. No es posible que alguien tome control de tu cuenta solamente conociento tu direcci\u00f3n. Luego de anotar la direcci\u00f3n, cambia de cuenta y elige la primera en donde has recibido algunas monedas desde los faucets. Cuando estes en tu cuenta correcta, haz click en el bot\u00f3n Send que aparece en el centro de la ventana de Metamask. Bot\u00f3n para enviar debajo de la cantidad disponible La ventana cambiar\u00e1 y ahora tenemos tres opciones. Pegar la direcci\u00f3n que copiamos. Hacer click en el \u00edcono de la derecha para usar nuestra c\u00e1mara para escanear un c\u00f3digo QR que represente a una direcci\u00f3n. Usar la opci\u00f3n Transfer between my accounts para simplificar la selecci\u00f3n de direcciones. Usaremos la primera opci\u00f3n pues es el caso m\u00e1s general, con este podremos tambi\u00e9n enviar monedas a cualquier otro usuario.s Colocar la direcci\u00f3n a donde enviaremos Despu\u00e9s de colocar la direcci\u00f3n, la siguiente pantalla nos permite elegir cu\u00e1nto enviar. Colocaremos una peque\u00f1a cantidad y continuaremos. Elegir la cantidad a enviar El paso final nos pide confirmar la cantidad de gas antes de enviar la transacci\u00f3n. El gas es un tema avanzado que revisaremos en la seman final, de momento dejaremos la cantidad de gas por defecto. Previsualizaci\u00f3n del gas que se consumir\u00e1 Luego de hacer click en Confirm , Metamask nos regresar\u00e1 a la ventana inicial donde podremos ver nuestra transacci\u00f3n pendiente. Pasar\u00e1 entre 10 segundos (el tiempo m\u00ednimo, que corresponde al tiempo de un bloque de Ethereum) y varios minutos antes que nuestra transacci\u00f3n se complete, esto depende de la congesti\u00f3n de la red en ese momento. La transacci\u00f3n se muestra como pendiente por un breve momento Dependiendo la configuraci\u00f3n de nuestra navegador, es posible que Metamask nos muestre una ventana de notificaci\u00f3n cuando la transacci\u00f3n se complete.","title":"Realizando una transacci\u00f3n"},{"location":"exercises/part2/transaction/#realizando-una-tranferencia","text":"La operaci\u00f3n m\u00e1s b\u00e1sica que podemos realizar con nuestras monedas es una transferencia. Nuestra billetera nos permitir\u00e1 acceder a nuestras monedas, llevar control de m\u00faltiples cuentas, realizar transferencias, y autorizar transacciones.","title":"Realizando una tranferencia"},{"location":"exercises/part2/transaction/#creando-direcciones-adicionales","text":"Para crear una nueva direcci\u00f3n abrimos la ventana de Metamask y luego hacemos click en el \u00edcono circular que hay en la esquina superior derecha. Al hacerla se desplegar\u00e1 un men\u00fa donde podemos seleccionar Create account . Podemos colocarle un nombre a esta nueva cuenta, o dejar el nombre por defecto. Creando una nueva cuenta Despu\u00e9s de crearla, al volver a hacer click en el \u00edcono ahora las veremos las distintas cuentas y podremos elegir la que querramos usar. Listado con las cuentas creadas","title":"Creando direcciones adicionales"},{"location":"exercises/part2/transaction/#realizando-una-transferencia-entre-cuentas","text":"Selecciona la cuenta que creaste en el inciso anterior y anota su direcci\u00f3n. Es seguro compartir tu direcci\u00f3n Tu direcci\u00f3n puedes copiarla, anotarla, e incluso compartirla. No es posible que alguien tome control de tu cuenta solamente conociento tu direcci\u00f3n. Luego de anotar la direcci\u00f3n, cambia de cuenta y elige la primera en donde has recibido algunas monedas desde los faucets. Cuando estes en tu cuenta correcta, haz click en el bot\u00f3n Send que aparece en el centro de la ventana de Metamask. Bot\u00f3n para enviar debajo de la cantidad disponible La ventana cambiar\u00e1 y ahora tenemos tres opciones. Pegar la direcci\u00f3n que copiamos. Hacer click en el \u00edcono de la derecha para usar nuestra c\u00e1mara para escanear un c\u00f3digo QR que represente a una direcci\u00f3n. Usar la opci\u00f3n Transfer between my accounts para simplificar la selecci\u00f3n de direcciones. Usaremos la primera opci\u00f3n pues es el caso m\u00e1s general, con este podremos tambi\u00e9n enviar monedas a cualquier otro usuario.s Colocar la direcci\u00f3n a donde enviaremos Despu\u00e9s de colocar la direcci\u00f3n, la siguiente pantalla nos permite elegir cu\u00e1nto enviar. Colocaremos una peque\u00f1a cantidad y continuaremos. Elegir la cantidad a enviar El paso final nos pide confirmar la cantidad de gas antes de enviar la transacci\u00f3n. El gas es un tema avanzado que revisaremos en la seman final, de momento dejaremos la cantidad de gas por defecto. Previsualizaci\u00f3n del gas que se consumir\u00e1 Luego de hacer click en Confirm , Metamask nos regresar\u00e1 a la ventana inicial donde podremos ver nuestra transacci\u00f3n pendiente. Pasar\u00e1 entre 10 segundos (el tiempo m\u00ednimo, que corresponde al tiempo de un bloque de Ethereum) y varios minutos antes que nuestra transacci\u00f3n se complete, esto depende de la congesti\u00f3n de la red en ese momento. La transacci\u00f3n se muestra como pendiente por un breve momento Dependiendo la configuraci\u00f3n de nuestra navegador, es posible que Metamask nos muestre una ventana de notificaci\u00f3n cuando la transacci\u00f3n se complete.","title":"Realizando una transferencia entre cuentas"},{"location":"exercises/part3/ganache/","text":"","title":"Contratos en Ganache"},{"location":"exercises/part3/installing/","text":"","title":"Instalaci\u00f3n de herramientas"},{"location":"exercises/part3/testing/","text":"","title":"Pruebas en Ganache"},{"location":"exercises/part3/testnet/","text":"","title":"Desplegando contratos en testnet"},{"location":"exercises/part3/truffle/","text":"","title":"Transacciones con Truffle"},{"location":"exercises/part4/gas/","text":"","title":"Errores por falta de gas"},{"location":"exercises/part4/interaction/","text":"","title":"Leer y escribir hacia contrato"},{"location":"exercises/part4/log/","text":"","title":"Logs como almacenamiento barato"},{"location":"exercises/part4/web3/","text":"","title":"Web3 para interactuar con contrato"},{"location":"exercises/part4/webpack/","text":"","title":"Utilizando Webpack"},{"location":"lessons/lesson1/","text":"","title":"Placeholder"},{"location":"lessons/lesson2/","text":"","title":"Placeholder"},{"location":"lessons/lesson3/","text":"","title":"Placeholder"},{"location":"lessons/lesson4/","text":"","title":"Placeholder"}]}